#!/bin/bash
# Get timestamp
current_time=$(date "+%Y.%m.%d-%H.%M.%S")
echo "Script initiated: ${current_time}"


TARGET=""
# If no argument supplied ask for target
if [ $# -eq 0 ]; then
    echo -n "[*] Please supply a target IP address: "
    read TARGET
else
    TARGET=$1
fi

# Check for valid IP
if [[ $TARGET =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    echo "[+] Targeting '$TARGET'"
else
    echo "[-] '$TARGET' is not a valid IP address. Please try again."
    echo "[*] Usage: $0 <ip>"
    exit 1
fi

# prepare folder structure
echo "[*] Attempting to create folder '$TARGET/'."
#read
mkdir $TARGET
cd $TARGET

echo "[+] Starting enumeration. This may take a while."

# Start with a fast nmap scan
echo "[*] Starting nmap service discovery scan..."
nmap -sV $TARGET 2>/dev/null > nmap-service-discovery.txt
echo "[+] nmap tcp scan done. Results saved in $TARGET/nmap-service-discovery.txt"

# Start with udp scan as it takes a while
( echo "[*] Starting quick udp unicornscan scan."
    unicornscan -mU $TARGET > unicornscan-udp.txt
    echo "[*] Unicorn scan done."
    echo "[*] Scanning top 30 udp ports with nmap..."
    nmap -sU -sV --top-ports 30 $TARGET > nmap-udp.txt
    echo "[*] udp scan done. Remember that it is still fairly unreliable." ) &

open_tcp_ports=$(grep 'open' nmap-service-discovery.txt | cut -d '/' -f 1)
not_impl=""

# Start appropriate tools for open ports
for port in $open_tcp_ports; do
    case $port in
        21 )
            ( echo "[+] Found open ftp Port. Initiating nmap ftp scripts..."
            nmap -Pn --script=ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-syst,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221 -p $port $TARGET > $port-nmap
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        22 )
            ( echo "[+] Found open SSH Port. Initiating nmap ssh scripts..."
            echo "nmap -Pn --script=ssh2-enum-algos,ssh-hostkey,ssh-auth-methods -p $port $TARGET > $port-nmap"
	    nmap -Pn --script=ssh2-enum-algos,ssh-hostkey,ssh-auth-methods -p $port $TARGET > $port-nmap
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        25 )
            ( echo "[+] Found open SMTP Port. Initiating nmap smtp scripts..."
            nmap -Pn --script=smtp-ntlm-info,smtp-vuln-cve2010-4344,smtp-vuln-cve2011-1720,smtp-vuln-cve2011-1764,smtp-enum-users --script-args smtp-enum-users.userdb=$SMTP_USERS_FILE -p $port $TARGET > $port-nmap
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        53 )
            ( echo "[+] Found open DNS Port. Initiating dnsrecon..."
            # dnsrecon
                ) &
            ;;
        80 | 8000 | 8080 | 8081 )
            ( 
            if [ "$2" != "" ] && [ "$2" == '-s' ]; then
                echo "[*] Skipping port $port."
            else
                echo "[+] Found open HTTP port. Initiating dirb scan..."
                dirb http://$TARGET:$port -o ${port}_dirb_scan
                echo "[*] Dirb scan completed. Initiating nikto scan..."
                nikto -Display 1234EP -o nikto_$TARGET_$port.html -Format htm -host http://$TARGET:$port
                echo "[+] nikto scan done. Initiating nmap http scripts"
                nmap -Pn --script=http-title,http-headers,http-server-header -p $port $TARGET >$port-nmap
            fi
                echo "[*] Done with port $port." ) &                 
            ;;
        443 )
            ( 
            if [ "$2" != "" ] && [ "$2" == '-s' ]; then
                echo "[*] Skipping port 443."
            else
                echo "[+] Found open HTTPS port. Initiating dirb scan..."
                dirb https://$TARGET -o ${port}_dirb_scan
                echo "[*] Dirb scan completed. Initiating nikto scan..."
                nikto -Display 1234EP -o nikto_$TARGET.html -Format htm -host https://$TARGET
                echo "[+] nikto scan done. Initiating nmap https scripts"
                nmap -Pn --script=http-title,http-headers,http-server-header -p $port $TARGET >$port-nmap
            fi
                echo "[*] Done with port $port." ) &
            ;;
        110 | 995 )
            ( echo "[+] Found open POP3 port. Initiating nmap pop3 scripts..."
            nmap -Pn -p $port --script pop3-ntlm-info,pop3-capabilities $TARGET > $port-nmap
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        137 | 138 | 139 )
            ( echo "[+] Netbios port found. Starting nbtscan..."
            nbtscan $TARGET > $port-nbtscan
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        199 )
            ( echo "[+] Found open SNMP mux port. Hints to open SNMP port. snmp-checking..."
            snmp-check $TARGET > $port-snmp-check
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        445 )
            ( echo "[+] Open SMB port found. Initiating enum4linux scan..."
            enum4linux -a $TARGET 2>/dev/null > $port-enum4linux
            echo "[+] enum4linux scan done. Scanning for SMB vulns now"
            nmap -Pn $TARGET --script=smb-enum-shares,smb-vuln-conficker,smb-vuln-cve2009-3103,smb-vuln-cve-2017-7494,smb-vuln-ms06-025,smb-vuln-ms07-029,smb-vuln-ms08-067,smb-vuln-ms10-054,smb-vuln-ms10-061,smb-vuln-ms17-010,smb-vuln-regsvc-dos -p139,445 > $port-nmap
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        3306 )
            ( echo "[+] Found open mysql Port. Initiating nmap mysql scripts..."
            nmap -Pn -p $port --script=mysql-variables,mysql-vuln-cve2012-2122,mysql-info,mysql-users,mysql-enum,mysql-databases,mysql-dump-hashes,mysql-empty-password $TARGET > $port-nmap
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        3389 )
            ( echo "[+] Found open remotedesktop Port. Initiating nmap rdp scripts..."
            nmap -Pn -p $port --script=rdp-enum-encryption,rdp-vuln-ms12-020 $TARGET > $port-nmap
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        5900 )
            ( echo "[+] Found open VNC Port. Initiating nmap vnc scripts..."
            nmap -Pn -p $port --script=vnc-info,vnc-title $TARGET > $port-nmap
            echo "[*] Done with port $port. Check '$TARGET/$port*' files" ) &
            ;;
        * )
            echo "[*] $port has no implemented function yet. Don't forget to enumerate manually."
            not_impl="$not_impl $port,"
            ;;
    esac
done

# SNMP check
echo "[*] Scan for open SNMP port"
for i in $(onesixtyone $TARGET | grep -v "Scanning 1 hosts, 2 communities"); do
    echo "[+] Found open SNMP port. Initiating snmp-check..."
    snmp-check $TARGET > 161-snmp-check.txt
    echo "[+] snmp-check done. Results saved in $TARGET/161-snmp-check.txt"
    break;
done

echo "[*] Waiting for scans to finish..."
wait

echo "[*] Starting thorough nmap scan..."
nmap -A -sV --script=default,vuln -p- -oN tcp_$TARGET $TARGET
echo "[+] nmap -A done. Results saved in $TARGET/nmap-all.txt"

echo "[+] All done. The following ports are not enumerated:$not_impl"
exit

